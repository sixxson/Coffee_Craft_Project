import {
  Body,
  Button,
  Container,
  Column,
  Head,
  Heading,
  Hr,
  Html,
  Img,
  Link,
  Preview,
  Row,
  Section,
  Text,
  Font, // Import Font
} from "@react-email/components";
import React from "react";
import { Decimal } from "@prisma/client/runtime/library";

import type { OrderWithDetails } from "../services/order.service.tsx";

type OrderItemWithProduct = OrderWithDetails["orderItems"][number];

interface OrderConfirmationEmailProps {
  order: OrderWithDetails;
  storeName?: string;
  storeUrl?: string;
}

// --- Base URL Configuration ---
const baseUrl = process.env.STORE_URL || "http://localhost:3000"; // Backend/API URL
const frontendBaseUrl = "https://coffee-craft.vercel.app"; // Your Vercel frontend URL
const defaultStoreName = "Coffee Craft";
const defaultProductImageUrl = `${baseUrl}/static/product-placeholder.png`; // Ensure this is publicly accessible

export const OrderConfirmationEmail = ({
  order,
  storeName = defaultStoreName,
  storeUrl = baseUrl,
}: OrderConfirmationEmailProps) => {
  const previewText = `X√°c nh·∫≠n ƒë∆°n h√†ng #${order.id} t·ª´ ${storeName}`;
  const formattedDate = new Intl.DateTimeFormat("vi-VN", {
    dateStyle: "long",
    timeStyle: "short",
  }).format(new Date(order.createdAt));

  // Updated currency format
  const formatCurrency = (amount: Decimal | number): string => {
    const numericAmount =
      typeof amount === "number" ? amount : amount.toNumber();
    // Prepend VND and use standard number formatting
    return "VND " + new Intl.NumberFormat("vi-VN").format(numericAmount);
  };

  const subtotal = order.orderItems.reduce(
    (acc: Decimal, item: OrderItemWithProduct) => {
      const itemTotal = item.priceAtOrder.mul(item.quantity);
      return acc.add(itemTotal);
    },
    new Decimal(0)
  );

  const viewOrderUrl = `${storeUrl}/orders/${order.id}`;

  return (
    <Html>
      <Head>{/* Optional: Embed custom fonts */}</Head>
      <Preview>{previewText}</Preview>
      <Body style={main}>
        <Container style={container}>
          {/* Header Section - Text Logo */}
          <Section style={headerSection}>
            <Text style={logoText}>
              <span style={logoCoffee}>Coffee</span>
              <span style={logoCraft}>Craft</span>
            </Text>
          </Section>

          {/* Main Greeting */}
          <Section style={contentSection}>
            <Heading style={mainHeading}>
              C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng t·∫°i {storeName}!
            </Heading>
            <Text style={paragraph}>
              Xin ch√†o {order.shippingAddress.receiverName || "b·∫°n"},
            </Text>
            <Text style={paragraph}>
              {storeName} ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t h√†ng #{order.id} c·ªßa b·∫°n v√†
              ƒëang x·ª≠ l√Ω nh√©. B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c th√¥ng b√°o ti·∫øp theo khi ƒë∆°n h√†ng
              ƒë√£ s·∫µn s√†ng ƒë∆∞·ª£c giao.
            </Text>
            <Section style={buttonContainer}>
              <Button style={statusButton} href={viewOrderUrl}>
                T√åNH TR·∫†NG ƒê∆†N H√ÄNG
              </Button>
            </Section>
            <Text style={noteText}>
              *L∆∞u √Ω nh·ªè cho b·∫°n: B·∫°n ch·ªâ n√™n nh·∫≠n h√†ng khi tr·∫°ng th√°i ƒë∆°n h√†ng
              l√† "ƒêang giao h√†ng" v√† nh·ªõ ki·ªÉm tra M√£ ƒë∆°n h√†ng, Th√¥ng tin ng∆∞·ªùi
              g·ª≠i v√† M√£ v·∫≠n ƒë∆°n ƒë·ªÉ nh·∫≠n ƒë√∫ng ki·ªán h√†ng nh√©.
            </Text>
          </Section>

          <Hr style={hr} />

          {/* Shipping Address */}
          <Section style={addressSectionStyle}>
            <Row>
              <Column style={iconColumn}>üìç</Column>
              <Column>
                <Text style={sectionTitle}>ƒê∆°n h√†ng ƒë∆∞·ª£c giao ƒë·∫øn</Text>
                <Row style={addressRow}>
                  <Column style={addressLabelColumn}>T√™n:</Column>
                  <Column style={addressValueColumn}>
                    {order.shippingAddress.receiverName}
                  </Column>
                </Row>
                <Row style={addressRow}>
                  <Column style={addressLabelColumn}>ƒê·ªãa ch·ªâ nh√†:</Column>
                  <Column style={addressValueColumn}>
                    {order.shippingAddress.address}
                  </Column>
                </Row>
                <Row style={addressRow}>
                  <Column style={addressLabelColumn}>ƒêi·ªán tho·∫°i:</Column>
                  <Column style={addressValueColumn}>
                    {order.shippingAddress.receiverPhone}
                  </Column>
                </Row>
                <Row style={addressRow}>
                  <Column style={addressLabelColumn}>Email:</Column>
                  <Column style={addressValueColumn}>
                    {order.user?.email || "N/A"}
                  </Column>
                </Row>
              </Column>
            </Row>
          </Section>

          <Hr style={hr} />

          {/* Order Items */}
          <Section style={itemsSectionStyle}>
            <Row>
              <Column style={iconColumn}>üì¶</Column>
              <Column>
                <Text style={sectionTitle}>Ki·ªán H√†ng #1</Text>
              </Column>
            </Row>

            {order.orderItems.map((item: OrderItemWithProduct) => {
              // Construct product URL
              const productUrl = `${frontendBaseUrl}/product/${item.productId}`;
              return (
              <Row key={item.id} style={itemRow}>
                <Column width="160" style={itemImageColumn}>
                    <Link href={productUrl} target="_blank"> {/* Link added */}
                  <Img
                    src={
                      item.product.images?.[0]?.url || defaultProductImageUrl
                    }
                        width="150"
                        height="150"
                    alt={item.product.name}
                    style={productImage}
                  />
                    </Link>
                </Column>
                <Column style={itemDetailsColumn}>
                    <Link href={productUrl} target="_blank" style={productLink}> {/* Link added */}
                  <Text style={itemText}>
                    {item.product.name}{" "}
                    {item.productVariant ? `(${item.productVariant.name})` : ""}
                  </Text>
                    </Link>
                    <Text style={itemPrice}> {/* Moved price below name */}
                    {formatCurrency(item.priceAtOrder.mul(item.quantity))}
                  </Text>
                  <Text style={itemQuantity}>SL: {item.quantity}</Text>
                </Column>
              </Row>
              );
            })}
          </Section>

          {/* <Hr style={hr} />  */}

          {/* Totals Section */}
          <Section style={{"padding": "5px 30px 10px 30px"}}>
            <Row style={totalsRow}>
              <Column style={totalsLabel}>Th√†nh ti·ªÅn:</Column>
              <Column style={totalsValueColumn}>
                <Text style={totalsValue}>{formatCurrency(subtotal)}</Text>
              </Column>
            </Row>
            {order.shippingFee.greaterThan(0) && (
              <Row style={totalsRow}>
                <Column style={totalsLabel}>Ph√≠ v·∫≠n chuy·ªÉn:</Column>
                <Column style={totalsValueColumn}>
                  <Text style={totalsValue}>
                    {formatCurrency(order.shippingFee)}
                  </Text>
                </Column>
              </Row>
            )}
            {order.discountAmount.greaterThan(0) && (
              <Row style={totalsRow}>
                <Column style={totalsLabel}>
                  Gi·∫£m gi√°{" "}
                  {order.voucher?.code ? `(${order.voucher.code})` : ""}:
                </Column>
                <Column style={totalsValueColumn}>
                  <Text style={totalsValue}>
                    ({formatCurrency(order.discountAmount)})
                  </Text>
                </Column>
              </Row>
            )}
            <Row style={totalsRowBold}>
              <Column style={totalsLabelBold}>T·ªïng c·ªông:</Column>
              <Column style={totalsValueColumn}>
                <Text style={totalsValueBold}>
                  {formatCurrency(order.finalTotal)}
                </Text>
              </Column>
            </Row>
          </Section>

          <Hr style={hr} />

          {/* Payment/Shipping Method */}
          <Section style={contentSection}>
            <Row style={methodRow}>
              <Column style={methodLabel}>T√πy ch·ªçn v·∫≠n chuy·ªÉn:</Column>
              <Column style={methodValue}>
                {
                  order.shippingAddress.address.includes("HCM")
                    ? "Giao h√†ng H·ªèa t·ªëc"
                    : "Giao h√†ng Ti√™u chu·∫©n" /* Placeholder logic */
                }
              </Column>
            </Row>
            <Row style={methodRow}>
              <Column style={methodLabel}>H√¨nh th·ª©c thanh to√°n:</Column>
              <Column style={methodValue}>
                {
                  order.paymentMethod === "COD"
                    ? "Thanh to√°n khi nh·∫≠n h√†ng"
                    : order.paymentMethod /* Placeholder */
                }
              </Column>
            </Row>
          </Section>

          <Hr style={hr} />

          {/* Help Section */}
          <Section style={contentSection}>
            <Row>
              <Column style={iconColumn}>‚ùì</Column>
              <Column>
                <Text style={sectionTitle}>C√≥ ph·∫£i b·∫°n th·∫Øc m·∫Øc?</Text>
                <Text style={helpQuestion}>
                  L√†m th·∫ø n√†o ƒë·ªÉ thay ƒë·ªïi ƒë·ªãa ch·ªâ giao h√†ng, s·ªë ƒëi·ªán tho·∫°i ho·∫∑c
                  th√¥ng tin ng∆∞·ªùi nh·∫≠n h√†ng cho ƒë∆°n h√†ng ƒë√£ ƒë·∫∑t?
                </Text>
                <Text style={helpAnswer}>
                  N·∫øu ƒë·ªãa th√¥ng tin li√™n l·∫°c/ giao h√†ng ch∆∞a ch√≠nh x√°c, b·∫°n c√≥
                  th·ªÉ h·ªßy n·∫øu ƒë∆°n h√†ng ch∆∞a ƒë∆∞·ª£c chuy·ªÉn sang tr·∫°ng th√°i ‚ÄúHo√†n
                  t·∫•t ƒë√≥ng g√≥i‚Äù v√† th·ª≠ ƒë·∫∑t l·∫°i ƒë∆°n h√†ng m·ªõi v·ªõi th√¥ng tin ch√≠nh
                  x√°c h∆°n b·∫°n nh√©.
                </Text>
                <Section
                  style={{
                    textAlign: "center",
                    marginTop: "20px",
                    marginBottom: "10px",
                  }}
                >
                  <Button
                    style={helpButton}
                    href={storeUrl /* Link to help page */}
                  >
                    N·∫æU C√íN TH·∫ÆC M·∫ÆC, CLICK T·∫†I ƒê√ÇY ƒê·ªÇ T√åM HI·ªÇU TH√äM!
                  </Button>
                </Section>
              </Column>
            </Row>
          </Section>

          {/* Footer */}
          <Section style={footer}>
            <Text style={logoText}>
              <span style={logoCoffee}>Coffee</span>
              <span style={logoCraft}>Craft</span>
            </Text>
            <Text style={footerText}>
              ¬© {new Date().getFullYear()} {storeName}.
            </Text>
            <Text style={footerText}>
              N·∫øu b·∫°n c√≥ b·∫•t k·ª≥ c√¢u h·ªèi n√†o, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i t·∫°i{" "}
              <Link
                href={`mailto:support@${storeUrl.replace(/https?:\/\//, "")}`}
                style={link}
              >
                support@coffeecraft.com
              </Link>
              .
            </Text>
            <Text style={footerText}>
              ƒê√¢y l√† th∆∞ t·ª± ƒë·ªông ƒë∆∞·ª£c t·∫°o t·ª´ danh s√°ch ƒëƒÉng k√Ω c·ªßa ch√∫ng t√¥i. Do
              ƒë√≥, xin ƒë·ª´ng tr·∫£ l·ªùi th∆∞ n√†y.
            </Text>
          </Section>
        </Container>
      </Body>
    </Html>
  );
};

export default OrderConfirmationEmail;

// --- Styles ---
const main = {
  backgroundColor: "#ffffff",
  fontFamily: '"Helvetica Neue",Helvetica,Arial,sans-serif',
};

const container = {
  backgroundColor: "#ffffff",
  margin: "0 auto",
  padding: "0",
  marginBottom: "64px",
  maxWidth: "680px",
};

const headerSection = {
  padding: "20px",
  borderBottom: "1px solid #e6e6e6",
};

const logoText = {
  fontSize: "28px",
  fontWeight: "bold",
  textAlign: "center" as const,
  margin: "0",
  padding: "10px 0",
};
const logoCoffee = {
  color: "#1a1a1a",
};
const logoCraft = {
  color: "#f5a623",
};

const contentSection = {
  padding: "20px 30px",
};

const addressSectionStyle = {
  padding: "10px 30px",
};

const itemsSectionStyle = {
  padding: "10px 30px",
};

const iconColumn = {
  width: "32px",
  verticalAlign: "top" as const,
    paddingTop: "3px",
  fontSize: "20px",
};

const mainHeading = {
  fontSize: "24px",
  fontWeight: "bold",
  textAlign: "center" as const,
  color: "#1a1a1a",
  margin: "10px 0 20px 0",
};

const paragraph = {
  fontSize: "14px",
  lineHeight: "22px",
  color: "#333333",
  margin: "0 0 15px 0",
};

const buttonContainer = {
  textAlign: "center" as const,
  margin: "25px 0",
};

const statusButton = {
  backgroundColor: "#f5a623",
  borderRadius: "4px",
  color: "#ffffff",
  fontSize: "16px",
  fontWeight: "bold",
  textDecoration: "none",
  textAlign: "center" as const,
  display: "inline-block",
  padding: "12px 30px",
  border: "none",
};

const noteText = {
  fontSize: "12px",
  color: "#555555",
  lineHeight: "18px",
  marginTop: "25px",
};

const hr = {
  borderColor: "#e6e6e6",
  margin: "0",
};

const sectionTitle = {
  fontSize: "16px",
  fontWeight: "bold",
  color: "#333333",
  margin: "5px 0 10px 0",
};

// Styles for aligned address
const addressRow = {
  marginBottom: "4px",
};
const addressLabelColumn = {
  width: "95px",
  paddingRight: "48px",
  fontSize: "14px",
  color: "#555555",
  verticalAlign: "top" as const,
};
const addressValueColumn = {
  fontSize: "14px",
  color: "#333333",
  verticalAlign: "top" as const,
};

const itemRow = {
  padding: "15px 0",
  borderBottom: "1px solid #e6e6e6",
};

const itemImageColumn = {
  verticalAlign: "top" as const,
    width: "160px",
};

const itemDetailsColumn = {
  paddingLeft: "15px",
  verticalAlign: "top" as const,
};

const itemText = {
  fontSize: "14px",
  lineHeight: "20px",
  color: "#333",
  margin: "0 0 4px 0",
};

const itemQuantity = {
    fontSize: "14px", // Slightly larger quantity text
  color: "#585858",
  margin: 0,
};

const itemPriceColumn = { // Removed this column as price is now under details
    // width: "120px",
    // verticalAlign: "top" as const,
};

const itemPrice = {
  fontSize: "14px",
    color: "#f5a623",
    margin: '4px 0 0 0',
    fontWeight: 'bold',
};

const productImage = {
  borderRadius: "4px",
  objectFit: "cover" as const,
    width: "150px",
    height: "150px",
};

// Style for the product link
const productLink = {
    color: '#333', // Match item text color
    textDecoration: 'none', // Remove underline
};


const totalsRow = {
  margin: 0,
  display: "flex",
  justifyContent: "space-between",
};
const totalsRowBold = {
  ...totalsRow,
  marginTop: "12px",
  paddingTop: "12px",
  borderTop: "1px solid #cccccc",
};

const totalsLabel = {
  fontSize: "14px",
  color: "#555555",
  textAlign: "left" as const,
  width: "150px",
};
const totalsLabelBold = {
  ...totalsLabel,
  fontWeight: "bold",
  color: "#333333",
};

const totalsValueColumn = {
  textAlign: "right" as const,
  width: "80%",
};

const totalsValue = {
  // Style for the Text component itself
  fontSize: "14px",
  color: "#555555",
  textAlign: "right" as const, // Explicitly set text align here
  fontWeight: "bold",
  display: "block",
};
const totalsValueBold = {
  ...totalsValue,
  fontWeight: "bold",
  color: "#f5a623",
  textAlign: "right" as const, // Explicitly set text align here
};

const methodRow = {
  margin: "6px 0",
};

const methodLabel = {
  fontSize: "14px",
  color: "#555555",
  width: "150px",
  paddingRight: "10px",
};

const methodValue = {
  fontSize: "14px",
  color: "#333333",
  fontWeight: "bold",
  textAlign: "right" as const,
};

const helpQuestion = {
  fontSize: "14px",
  fontWeight: "bold",
  color: "#333333",
  marginBottom: "8px",
};

const helpAnswer = {
  fontSize: "14px",
  lineHeight: "20px",
  color: "#555555",
  marginBottom: "15px",
};

const helpButton = {
  ...statusButton,
  padding: "10px 25px",
  fontSize: "14px",
};

const footer = {
  padding: "20px",
  marginTop: "20px",
  borderTop: "1px solid #e6e6e6",
};

const footerText = {
  fontSize: "12px",
  color: "#888888",
  lineHeight: "18px",
  textAlign: "center" as const,
  marginBottom: "10px",
};

const link = {
  color: "#007bff",
  textDecoration: "none",
};
